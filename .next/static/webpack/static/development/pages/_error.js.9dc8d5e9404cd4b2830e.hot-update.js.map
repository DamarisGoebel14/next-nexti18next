{"version":3,"file":"static/webpack/static\\development\\pages\\_error.js.9dc8d5e9404cd4b2830e.hot-update.js","sources":["webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js","webpack:///./pages/_error.js"],"sourcesContent":["\n    (window.__NEXT_P=window.__NEXT_P||[]).push([\"/_error\", function() {\n      var mod = require(\"D:\\\\React learning\\\\next-i18next\\\\examples\\\\simple\\\\pages\\\\_error.js\")\n      if(module.hot) {\n        module.hot.accept(\"D:\\\\React learning\\\\next-i18next\\\\examples\\\\simple\\\\pages\\\\_error.js\", function() {\n          if(!next.router.components[\"/_error\"]) return\n          var updatedPage = require(\"D:\\\\React learning\\\\next-i18next\\\\examples\\\\simple\\\\pages\\\\_error.js\")\n          next.router.update(\"/_error\", updatedPage)\n        })\n      }\n      return mod\n    }]);\n  ","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { withTranslation } from '../i18n'\r\n\r\nconst Error = ({ statusCode, t }) => (\r\n  <p>\r\n    {statusCode\r\n      ? t('error-with-status', { statusCode })\r\n      : t('error-without-status')}\r\n  </p>\r\n)\r\n\r\nError.getInitialProps = async ({ res, err }) => {\r\n  let statusCode = null\r\n  if (res) {\r\n    ({ statusCode } = res)\r\n  } else if (err) {\r\n    ({ statusCode } = err)\r\n  }\r\n  return {\r\n    namespacesRequired: ['common'],\r\n    statusCode,\r\n  }\r\n}\r\n\r\nError.defaultProps = {\r\n  statusCode: null,\r\n}\r\n\r\nError.propTypes = {\r\n  statusCode: PropTypes.number,\r\n  t: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withTranslation('common')(Error)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAHA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AAFA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;AACA;AADA;AAIA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;A","sourceRoot":""}
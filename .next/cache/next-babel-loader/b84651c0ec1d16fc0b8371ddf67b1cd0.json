{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from '../i18n';\n\nvar Error = function Error(_ref) {\n  var statusCode = _ref.statusCode,\n      t = _ref.t;\n  return __jsx(\"p\", null, statusCode ? t('error-with-status', {\n    statusCode: statusCode\n  }) : t('error-without-status'));\n};\n\nError.getInitialProps = function _callee(_ref2) {\n  var res, err, statusCode;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          res = _ref2.res, err = _ref2.err;\n          statusCode = null;\n\n          if (res) {\n            statusCode = res.statusCode;\n          } else if (err) {\n            statusCode = err.statusCode;\n          }\n\n          return _context.abrupt(\"return\", {\n            namespacesRequired: ['common'],\n            statusCode: statusCode\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nError.defaultProps = {\n  statusCode: null\n};\nError.propTypes = {\n  statusCode: PropTypes.number,\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('common')(Error);","map":{"version":3,"sources":["D:/React learning/next-i18next/examples/simple/pages/_error.js"],"names":["React","PropTypes","withTranslation","Error","statusCode","t","getInitialProps","res","err","namespacesRequired","defaultProps","propTypes","number","func","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,eAAT,QAAgC,SAAhC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,UAAH,QAAGA,UAAH;AAAA,MAAeC,CAAf,QAAeA,CAAf;AAAA,SACZ,iBACGD,UAAU,GACPC,CAAC,CAAC,mBAAD,EAAsB;AAAED,IAAAA,UAAU,EAAVA;AAAF,GAAtB,CADM,GAEPC,CAAC,CAAC,sBAAD,CAHP,CADY;AAAA,CAAd;;AAQAF,KAAK,CAACG,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,SAASA,GAAT,EAAcC,GAAd,SAAcA,GAAd;AAClBJ,UAAAA,UADkB,GACL,IADK;;AAEtB,cAAIG,GAAJ,EAAS;AACJH,YAAAA,UADI,GACWG,GADX,CACJH,UADI;AAER,WAFD,MAEO,IAAII,GAAJ,EAAS;AACXJ,YAAAA,UADW,GACII,GADJ,CACXJ,UADW;AAEf;;AANqB,2CAOf;AACLK,YAAAA,kBAAkB,EAAE,CAAC,QAAD,CADf;AAELL,YAAAA,UAAU,EAAVA;AAFK,WAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAaAD,KAAK,CAACO,YAAN,GAAqB;AACnBN,EAAAA,UAAU,EAAE;AADO,CAArB;AAIAD,KAAK,CAACQ,SAAN,GAAkB;AAChBP,EAAAA,UAAU,EAAEH,SAAS,CAACW,MADN;AAEhBP,EAAAA,CAAC,EAAEJ,SAAS,CAACY,IAAV,CAAeC;AAFF,CAAlB;AAKA,eAAeZ,eAAe,CAAC,QAAD,CAAf,CAA0BC,KAA1B,CAAf","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { withTranslation } from '../i18n'\r\n\r\nconst Error = ({ statusCode, t }) => (\r\n  <p>\r\n    {statusCode\r\n      ? t('error-with-status', { statusCode })\r\n      : t('error-without-status')}\r\n  </p>\r\n)\r\n\r\nError.getInitialProps = async ({ res, err }) => {\r\n  let statusCode = null\r\n  if (res) {\r\n    ({ statusCode } = res)\r\n  } else if (err) {\r\n    ({ statusCode } = err)\r\n  }\r\n  return {\r\n    namespacesRequired: ['common'],\r\n    statusCode,\r\n  }\r\n}\r\n\r\nError.defaultProps = {\r\n  statusCode: null,\r\n}\r\n\r\nError.propTypes = {\r\n  statusCode: PropTypes.number,\r\n  t: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withTranslation('common')(Error)\r\n"]},"metadata":{},"sourceType":"module"}